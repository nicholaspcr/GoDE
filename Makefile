# vim: set foldmarker={,} foldlevel=0 foldmethod=marker:
#
#
# This Makefile is heavily inspired by:
# https://github.com/vincentbernat/hellogopher/blob/master/Makefile
#

.PHONY: help
help: ## Shows help message.
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m\033[0m\n"} /^[$$()% 0-9a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)


.PHONY: init
init: ## Set up all the necessary requirements to run the repository locally.
	@mkdir -p .dev
	@mkdir -p .env

.PHONY: deps
deps: ## Downloads dependencies.
	@echo 'Installing dependencies...'
	@go mod download

.PHONY: clean
clean: ## Cleans all the possible dirty files generated by the other go commands.
	@echo 'Checking for files created by go/coverage...'
	@[ -f ./profile.cov ] && rm profile.cov	|| true
	@[ -f ./profile.cov.tmp ] && rm profile.cov.tmp || true
	@echo 'checking for the bin folder...'
	@[ -d ./bin ] && rm -r ./bin || true

.PHONY: proto-lint
proto-lint: ## Runs the linter for the proto files.
	@echo 'Running linter...'
	@buf lint

.PHONY: proto-generate
proto-generate: ## Generates golang code from proto definitions.
	@echo 'Removing previous proto files...'
	find . -type f -name \*.pb.gw.go | xargs --no-run-if-empty rm
	@buf generate
	@echo 'Done generating protos'

.PHONY: proto
proto: proto-lint proto-generate ## Lints and generates proto code

.PHONY: dev
dev: ## Runs the dev environment for all applications.
	@docker compose -f docker-compose.yml up

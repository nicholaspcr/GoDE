syntax = "proto3";
option go_package = "pkg/api";

import "api/user.proto";
import "google/protobuf/empty.proto";

package api;

message Vector {
  repeated double elements = 1;
  repeated double objectives = 2;
  double crowding_distance = 3;
}

message PopulationIDs {
  uint64 id = 1;
  string user_id = 2;
}

message Population {
  PopulationIDs ids = 1;
  repeated Vector vectors = 2;
}

message PopulationParameters {
  int64 dimensions_size = 1;
  int64 objetives_size = 2;
  repeated double floor_slice = 3;
  repeated double ceil_slice = 4;
}

service PopulationServices {
    rpc Create (Population) returns (google.protobuf.Empty) {}
    rpc Read (PopulationIDs) returns (Population) {}
    rpc Update (Population) returns (google.protobuf.Empty) {}
    rpc Delete (PopulationIDs) returns (google.protobuf.Empty) {}
    rpc ListByUser (UserID) returns (stream Population) {}
}


message ParetoIDs {
  uint64 id = 1;
  string user_id = 2;
}

message Pareto {
  ParetoIDs ids = 1;
  Population population = 2;
  repeated double max_objs = 3;
}

service ParetoServices {
    rpc Create (Pareto) returns (google.protobuf.Empty) {}
    rpc Read (ParetoIDs) returns (Pareto) {}
    rpc Update (Pareto) returns (google.protobuf.Empty) {}
    rpc Delete (ParetoIDs) returns (google.protobuf.Empty) {}
    rpc ListByUser (UserID) returns (stream Pareto) {}
}

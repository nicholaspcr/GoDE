syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "pkg/api";

// UserIDs is the standard user id message.
message UserIDs {
  string email = 1;
}

// User is the standard user message.
message User {
  UserIDs ids = 1;
  string name = 2;
  string password = 3;
}

// UserService are all the services that can be performed on a user.
service UserService {
  rpc Create(UserServiceCreateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/user"
      body: "*"
    };
  }
  rpc Get(UserServiceGetRequest) returns (UserServiceGetResponse) {
    option (google.api.http) = {get: "/v1/user/{user_ids.email}"};
  }
	// TODO: Add fieldmask to request.
  rpc Update(UserServiceUpdateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/user"
      body: "*"
    };
  }
  rpc Delete(UserServiceDeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/user/{user_ids.email}"};
  }
}

message UserServiceCreateRequest {
  User user = 1;
}

message UserServiceGetRequest {
  UserIDs user_ids = 1;
}

message UserServiceGetResponse {
  User user = 1;
}

message UserServiceUpdateRequest {
  User user = 1;
}

message UserServiceDeleteRequest {
  UserIDs user_ids = 1;
}
